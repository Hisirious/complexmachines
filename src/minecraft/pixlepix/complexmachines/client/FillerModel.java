// Date: 05/05/2013 17:25:18
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package pixlepix.complexmachines.client;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class FillerModel extends ModelBase
{
  //fields
    ModelRenderer PanelLowFront;
    ModelRenderer PanelLowBack;
    ModelRenderer RightPlate;
    ModelRenderer LeftPlate;
    ModelRenderer PanelHighFront;
    ModelRenderer PanelHighBack;
    ModelRenderer MainCylinder;
    ModelRenderer CoverCylinder;
    ModelRenderer Spade1;
    ModelRenderer Spade2;
    ModelRenderer Spade_4;
    ModelRenderer Spade4_5;
    ModelRenderer Spade_5;
    ModelRenderer Spade6;
    ModelRenderer Spade7;
    ModelRenderer Spade8;
    ModelRenderer Spade9;
    ModelRenderer Spade10;
    ModelRenderer Spade11;
    ModelRenderer Spade12;
    ModelRenderer Spade13;
    ModelRenderer Spade14;
    ModelRenderer Spade15;
    ModelRenderer Piece1;
  
  public FillerModel()
  {
    textureWidth = 128;
    textureHeight = 128;
    
      PanelLowFront = new ModelRenderer(this, 1, 0);
      PanelLowFront.addBox(0F, 0F, 0F, 15, 1, 4);
      PanelLowFront.setRotationPoint(-8F, 23F, -8F);
      PanelLowFront.setTextureSize(128, 128);
      PanelLowFront.mirror = true;
      setRotation(PanelLowFront, 0F, 0F, 0F);
      PanelLowBack = new ModelRenderer(this, 0, 0);
      PanelLowBack.addBox(0F, 0F, 0F, 15, 1, 4);
      PanelLowBack.setRotationPoint(-8F, 23F, 4F);
      PanelLowBack.setTextureSize(128, 128);
      PanelLowBack.mirror = true;
      setRotation(PanelLowBack, 0F, 0F, 0F);
      RightPlate = new ModelRenderer(this, 44, 0);
      RightPlate.addBox(0F, 0F, 0F, 1, 16, 16);
      RightPlate.setRotationPoint(6F, 8F, -8F);
      RightPlate.setTextureSize(128, 128);
      RightPlate.mirror = true;
      setRotation(RightPlate, 0F, 0F, 0F);
      LeftPlate = new ModelRenderer(this, 44, 0);
      LeftPlate.addBox(0F, 0F, 0F, 1, 16, 16);
      LeftPlate.setRotationPoint(-8F, 8F, -8F);
      LeftPlate.setTextureSize(128, 128);
      LeftPlate.mirror = true;
      setRotation(LeftPlate, 0F, 0F, 0F);
      PanelHighFront = new ModelRenderer(this, 0, 0);
      PanelHighFront.addBox(0F, 0F, 0F, 15, 1, 4);
      PanelHighFront.setRotationPoint(-8F, 8F, -8F);
      PanelHighFront.setTextureSize(128, 128);
      PanelHighFront.mirror = true;
      setRotation(PanelHighFront, 0F, 0F, 0F);
      PanelHighBack = new ModelRenderer(this, 0, 0);
      PanelHighBack.addBox(0F, 0F, 0F, 15, 1, 4);
      PanelHighBack.setRotationPoint(-8F, 8F, 4F);
      PanelHighBack.setTextureSize(128, 128);
      PanelHighBack.mirror = true;
      setRotation(PanelHighBack, 0F, 0F, 0F);
      MainCylinder = new ModelRenderer(this, 0, 24);
      MainCylinder.addBox(0F, 0F, 0F, 14, 4, 4);
      MainCylinder.setRotationPoint(-7F, 14F, -2F);
      MainCylinder.setTextureSize(128, 128);
      MainCylinder.mirror = true;
      setRotation(MainCylinder, 0F, 0F, 0F);
      CoverCylinder = new ModelRenderer(this, 0, 13);
      CoverCylinder.addBox(0F, 0F, 0F, 9, 5, 5);
      CoverCylinder.setRotationPoint(-5F, 13.5F, -2.5F);
      CoverCylinder.setTextureSize(128, 128);
      CoverCylinder.mirror = true;
      setRotation(CoverCylinder, 0F, 0F, 0F);
      Spade1 = new ModelRenderer(this, 0, 39);
      Spade1.addBox(0F, 0F, 0F, 1, 1, 3);
      Spade1.setRotationPoint(7F, 9F, 3F);
      Spade1.setTextureSize(128, 128);
      Spade1.mirror = true;
      setRotation(Spade1, 0F, 0F, 0F);
      Spade2 = new ModelRenderer(this, 0, 45);
      Spade2.addBox(0F, 0F, 0F, 1, 3, 1);
      Spade2.setRotationPoint(7F, 10F, 6F);
      Spade2.setTextureSize(128, 128);
      Spade2.mirror = true;
      setRotation(Spade2, 0F, 0F, 0F);
      Spade_4 = new ModelRenderer(this, 0, 51);
      Spade_4.addBox(0F, 0F, 0F, 1, 4, 4);
      Spade_4.setRotationPoint(7F, 10F, 2F);
      Spade_4.setTextureSize(128, 128);
      Spade_4.mirror = true;
      setRotation(Spade_4, 0F, 0F, 0F);
      Spade4_5 = new ModelRenderer(this, 0, 61);
      Spade4_5.addBox(0F, 0F, 0F, 1, 2, 1);
      Spade4_5.setRotationPoint(7F, 11F, 1F);
      Spade4_5.setTextureSize(128, 128);
      Spade4_5.mirror = true;
      setRotation(Spade4_5, 0F, 0F, 0F);
      Spade_5 = new ModelRenderer(this, 6, 61);
      Spade_5.addBox(0F, 0F, 0F, 1, 1, 2);
      Spade_5.setRotationPoint(7F, 14F, 3F);
      Spade_5.setTextureSize(128, 128);
      Spade_5.mirror = true;
      setRotation(Spade_5, 0F, 0F, 0F);
      Spade6 = new ModelRenderer(this, 0, 66);
      Spade6.addBox(0F, 0F, 0F, 1, 1, 1);
      Spade6.setRotationPoint(7F, 12F, 0F);
      Spade6.setTextureSize(128, 128);
      Spade6.mirror = true;
      setRotation(Spade6, 0F, 0F, 0F);
      Spade7 = new ModelRenderer(this, 0, 70);
      Spade7.addBox(0F, 0F, 0F, 1, 1, 1);
      Spade7.setRotationPoint(7F, 15F, 3F);
      Spade7.setTextureSize(128, 128);
      Spade7.mirror = true;
      setRotation(Spade7, 0F, 0F, 0F);
      Spade8 = new ModelRenderer(this, 0, 74);
      Spade8.addBox(0F, 0F, 0F, 1, 2, 2);
      Spade8.setRotationPoint(7F, 13F, 1F);
      Spade8.setTextureSize(128, 128);
      Spade8.mirror = true;
      setRotation(Spade8, 0F, 0F, 0F);
      Spade9 = new ModelRenderer(this, 0, 86);
      Spade9.addBox(0F, 0F, 0F, 1, 2, 2);
      Spade9.setRotationPoint(7F, 16F, -2F);
      Spade9.setTextureSize(128, 128);
      Spade9.mirror = true;
      setRotation(Spade9, 0F, 0F, 0F);
      Spade10 = new ModelRenderer(this, 0, 80);
      Spade10.addBox(0F, 0F, 0F, 1, 2, 2);
      Spade10.setRotationPoint(7F, 15F, -1F);
      Spade10.setTextureSize(128, 128);
      Spade10.mirror = true;
      setRotation(Spade10, 0F, 0F, 0F);
      Spade11 = new ModelRenderer(this, 7, 74);
      Spade11.addBox(0F, 0F, 0F, 1, 2, 2);
      Spade11.setRotationPoint(7F, 14F, 0F);
      Spade11.setTextureSize(128, 128);
      Spade11.mirror = true;
      setRotation(Spade11, 0F, 0F, 0F);
      Spade12 = new ModelRenderer(this, 0, 92);
      Spade12.addBox(0F, 0F, 0F, 1, 2, 2);
      Spade12.setRotationPoint(7F, 17F, -3F);
      Spade12.setTextureSize(128, 128);
      Spade12.mirror = true;
      setRotation(Spade12, 0F, 0F, 0F);
      Spade13 = new ModelRenderer(this, 0, 98);
      Spade13.addBox(0F, 0F, 0F, 1, 2, 2);
      Spade13.setRotationPoint(7F, 18F, -4F);
      Spade13.setTextureSize(128, 128);
      Spade13.mirror = true;
      setRotation(Spade13, 0F, 0F, 0F);
      Spade14 = new ModelRenderer(this, 0, 104);
      Spade14.addBox(0F, 0F, 0F, 1, 2, 2);
      Spade14.setRotationPoint(7F, 20F, -5F);
      Spade14.setTextureSize(128, 128);
      Spade14.mirror = true;
      setRotation(Spade14, 0F, 0F, 0F);
      Spade15 = new ModelRenderer(this, 0, 110);
      Spade15.addBox(0F, 0F, 0F, 1, 2, 2);
      Spade15.setRotationPoint(7F, 19F, -6F);
      Spade15.setTextureSize(128, 128);
      Spade15.mirror = true;
      setRotation(Spade15, 0F, 0F, 0F);
    Piece1 = new ModelRenderer(this, "Piece1");
    Piece1.setRotationPoint(0F, 0F, 0F);
    setRotation(Piece1, 0F, 0F, 0F);
    Piece1.mirror = true;
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    PanelLowFront.render(f5);
    PanelLowBack.render(f5);
    RightPlate.render(f5);
    LeftPlate.render(f5);
    PanelHighFront.render(f5);
    PanelHighBack.render(f5);
    MainCylinder.render(f5);
    CoverCylinder.render(f5);
    Spade1.render(f5);
    Spade2.render(f5);
    Spade_4.render(f5);
    Spade4_5.render(f5);
    Spade_5.render(f5);
    Spade6.render(f5);
    Spade7.render(f5);
    Spade8.render(f5);
    Spade9.render(f5);
    Spade10.render(f5);
    Spade11.render(f5);
    Spade12.render(f5);
    Spade13.render(f5);
    Spade14.render(f5);
    Spade15.render(f5);
    Piece1.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5,entity);
  }

}
